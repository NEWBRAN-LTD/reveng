[
  {
    type: 'ImportDeclaration',
    span: { start: 59, end: 90, ctxt: 0 },
    specifiers: [
      {
        type: 'ImportSpecifier',
        span: { start: 73, end: 75, ctxt: 0 },
        local: {
          type: 'Identifier',
          span: { start: 73, end: 75, ctxt: 0 },
          value: 'Id',
          optional: false
        },
        imported: null,
        isTypeOnly: false
      }
    ],
    source: {
      type: 'StringLiteral',
      span: { start: 83, end: 90, ctxt: 0 },
      value: './lib',
      raw: "'./lib'"
    },
    typeOnly: true,
    asserts: null
  },
  {
    type: 'ImportDeclaration',
    span: { start: 91, end: 130, ctxt: 0 },
    specifiers: [
      {
        type: 'ImportSpecifier',
        span: { start: 100, end: 108, ctxt: 0 },
        local: {
          type: 'Identifier',
          span: { start: 100, end: 108, ctxt: 0 },
          value: 'someFunc',
          optional: false
        },
        imported: null,
        isTypeOnly: false
      },
      {
        type: 'ImportSpecifier',
        span: { start: 110, end: 115, ctxt: 0 },
        local: {
          type: 'Identifier',
          span: { start: 110, end: 115, ctxt: 0 },
          value: 'getId',
          optional: false
        },
        imported: null,
        isTypeOnly: false
      }
    ],
    source: {
      type: 'StringLiteral',
      span: { start: 123, end: 130, ctxt: 0 },
      value: './lib',
      raw: "'./lib'"
    },
    typeOnly: false,
    asserts: null
  },
  {
    type: 'VariableDeclaration',
    span: { start: 132, end: 150, ctxt: 0 },
    kind: 'const',
    declare: false,
    declarations: [
      {
        type: 'VariableDeclarator',
        span: { start: 138, end: 150, ctxt: 0 },
        id: {
          type: 'Identifier',
          span: { start: 138, end: 144, ctxt: 0 },
          value: 'userId',
          optional: false,
          typeAnnotation: null
        },
        init: {
          type: 'NumericLiteral',
          span: { start: 147, end: 150, ctxt: 0 },
          value: 100,
          raw: '100'
        },
        definite: false
      }
    ]
  },
  {
    type: 'VariableDeclaration',
    span: { start: 152, end: 188, ctxt: 0 },
    kind: 'const',
    declare: false,
    declarations: [
      {
        type: 'VariableDeclarator',
        span: { start: 158, end: 188, ctxt: 0 },
        id: {
          type: 'Identifier',
          span: { start: 158, end: 165, ctxt: 0 },
          value: 'userObj',
          optional: false,
          typeAnnotation: {
            type: 'TsTypeAnnotation',
            span: { start: 165, end: 169, ctxt: 0 },
            typeAnnotation: {
              type: 'TsTypeReference',
              span: { start: 167, end: 169, ctxt: 0 },
              typeName: {
                type: 'Identifier',
                span: { start: 167, end: 169, ctxt: 0 },
                value: 'Id',
                optional: false
              },
              typeParams: null
            }
          }
        },
        init: {
          type: 'CallExpression',
          span: { start: 172, end: 188, ctxt: 0 },
          callee: {
            type: 'Identifier',
            span: { start: 172, end: 180, ctxt: 0 },
            value: 'someFunc',
            optional: false
          },
          arguments: [
            {
              spread: null,
              expression: {
                type: 'Identifier',
                span: { start: 181, end: 187, ctxt: 0 },
                value: 'userId',
                optional: false
              }
            }
          ],
          typeArguments: null
        },
        definite: false
      }
    ]
  },
  {
    type: 'VariableDeclaration',
    span: { start: 190, end: 220, ctxt: 0 },
    kind: 'const',
    declare: false,
    declarations: [
      {
        type: 'VariableDeclarator',
        span: { start: 196, end: 220, ctxt: 0 },
        id: {
          type: 'Identifier',
          span: { start: 196, end: 203, ctxt: 0 },
          value: '_userId',
          optional: false,
          typeAnnotation: null
        },
        init: {
          type: 'CallExpression',
          span: { start: 206, end: 220, ctxt: 0 },
          callee: {
            type: 'Identifier',
            span: { start: 206, end: 211, ctxt: 0 },
            value: 'getId',
            optional: false
          },
          arguments: [
            {
              spread: null,
              expression: {
                type: 'Identifier',
                span: { start: 212, end: 219, ctxt: 0 },
                value: 'userObj',
                optional: false
              }
            }
          ],
          typeArguments: null
        },
        definite: false
      }
    ]
  },
  {
    type: 'ExpressionStatement',
    span: { start: 222, end: 263, ctxt: 0 },
    expression: {
      type: 'CallExpression',
      span: { start: 222, end: 263, ctxt: 0 },
      callee: {
        type: 'MemberExpression',
        span: { start: 222, end: 233, ctxt: 0 },
        object: {
          type: 'Identifier',
          span: { start: 222, end: 229, ctxt: 0 },
          value: 'console',
          optional: false
        },
        property: {
          type: 'Identifier',
          span: { start: 230, end: 233, ctxt: 0 },
          value: 'log',
          optional: false
        }
      },
      arguments: [
        {
          spread: null,
          expression: {
            type: 'TemplateLiteral',
            span: { start: 234, end: 262, ctxt: 0 },
            expressions: [
              {
                type: 'Identifier',
                span: { start: 253, end: 260, ctxt: 0 },
                value: '_userId',
                optional: false
              }
            ],
            quasis: [
              {
                type: 'TemplateElement',
                span: { start: 235, end: 251, ctxt: 0 },
                tail: false,
                cooked: 'the user id is: ',
                raw: 'the user id is: '
              },
              {
                type: 'TemplateElement',
                span: { start: 261, end: 261, ctxt: 0 },
                tail: true,
                cooked: '',
                raw: ''
              }
            ]
          }
        }
      ],
      typeArguments: null
    }
  }
]
